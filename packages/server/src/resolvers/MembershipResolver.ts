
/** 
 * This file generated by Apso.
*/

import {
  Resolver,
  Query,
  Mutation,
  Arg,
  InputType,
  Field
} from "type-graphql";
import Membership from "../entities/Membership";
import MembershipRepository from "../repositories/MembershipRepository";

@InputType()
class CreateMembershipInput implements Partial<Membership> {
  
    
  @Field()
  public active!: boolean;
    
}

@Resolver()
export default class MembershipResolver {
  private readonly membershipRepo: MembershipRepository

  constructor(
      /** MembershipRepository */membershipRepo: MembershipRepository,
  ) {
      this.membershipRepo = membershipRepo;
  }

  @Query(() => Membership)
  getMembership(
    @Arg("id") id: number
  ) {
    return this.membershipRepo.findById(id)
  }

  @Query(() => [Membership])
  getMemberships() {
    return this.membershipRepo.findAll()
  }

  @Mutation(() => Membership)
  createMembership(
    @Arg("data") data: CreateMembershipInput
  ) {
    return this.membershipRepo.create(data)
  }  
  
  @Mutation(() => Membership)
  async updateMembership(
    @Arg("data") data: Membership
  ) {
    if (!data.id) {
      throw new Error('missing id')
    }
    
    await this.membershipRepo.update(data.id, data)
    
    return data
  }

  
}