
/** 
 * This file generated by Apso.
*/

import {
  Resolver,
  Query,
  Mutation,
  Arg,
  InputType,
  Field
} from "type-graphql";
import File from "../entities/File";
import FileRepository from "../repositories/FileRepository";

@InputType()
class CreateFileInput implements Partial<File> {
  
    
  @Field()
  public filename!: string;
    
}

@Resolver()
export default class FileResolver {
  private readonly fileRepo: FileRepository

  constructor(
      /** FileRepository */fileRepo: FileRepository,
  ) {
      this.fileRepo = fileRepo;
  }

  @Query(() => File)
  getFile(
    @Arg("id") id: number
  ) {
    return this.fileRepo.findById(id)
  }

  @Query(() => [File])
  getFiles() {
    return this.fileRepo.findAll()
  }

  @Mutation(() => File)
  createFile(
    @Arg("data") data: CreateFileInput
  ) {
    return this.fileRepo.create(data)
  }  
  
  @Mutation(() => File)
  async updateFile(
    @Arg("data") data: File
  ) {
    if (!data.id) {
      throw new Error('missing id')
    }
    
    await this.fileRepo.update(data.id, data)
    
    return data
  }

  
}