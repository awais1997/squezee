
/** 
 * This file generated by Apso.
*/

import { Database } from '@apso/server'
import {
    Column,
    Entity,
    ManyToOne,


    PrimaryGeneratedColumn,
    BeforeInsert,
    OneToMany,
    AfterLoad,
    CreateDateColumn,
    UpdateDateColumn,
} from "typeorm";
import { ObjectType, Field, Int, InputType } from "type-graphql";
import GraphQLJSON from 'graphql-type-json';
import shortId from 'short-uuid';
import Account from './Account';
import { PageSettings} from 'squeazee-types'
import Lead from './Lead';

@ObjectType()
@InputType('LandingPageInput')
@Entity()
export default class LandingPage {
    // Fields
    @Field()
    @PrimaryGeneratedColumn()
    public id!: number;
    
    
  @Field()
  @Column({
    nullable: false
  })
  public slug!: string;
    

  @Field(type => GraphQLJSON)
  @Column({ type: "jsonb" })
  public jsonBody!: PageSettings;
    
  @BeforeInsert()
  addSlug() {
      this.slug = shortId.generate()
  }

  // Associations

  @ManyToOne(type => Account, account => account.landingPages)
  account: Account;
  
  @OneToMany(type => Lead, lead => lead.landingPage)
  leads: Lead[];

  @Field()
  public leadCount?: number;

  @AfterLoad()
  getLeadCount() {
    this.leadCount = this.leads && this.leads.length || 0;
  }

  @Field()
  @CreateDateColumn()
  public createdAt!: Date;
  
  @Field()
  @UpdateDateColumn({
      nullable: true,
  })
  public updatedAt?: Date;
}