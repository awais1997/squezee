
/** 
 * This file generated by Apso.
*/

import { Database } from '@apso/server'
import {
    Column,
    Entity,
    ManyToOne,


    PrimaryGeneratedColumn,
} from "typeorm";
import { ObjectType, Field, Int, InputType } from "type-graphql";
import User from './User';

@ObjectType()
@InputType('AuthorizationInput')
@Entity()
export default class Authorization extends Database.TimestampedModel{
    // Fields
    @Field()
    @PrimaryGeneratedColumn()
    public id?: number;
    
    
  @Field()
  @Column({
    type: 'enum',
    enum: ['password','google','facebook','twitter','slack']
  })
  public provider!: string;
    

    
  @Field()
  @Column({
    nullable: true
  })
  public email?: string;
    

    
  @Field()
  @Column({
    nullable: true
  })
  public password?: string;
  
  @Field()
  @Column({
    nullable: true
  })
  public providerId?: string;
    

    
  @Field()
  @Column({
    nullable: true
  })
  public tokenVersion!: number;
    

    
  @Field()
  @Column()
  public active!: boolean;
    
    // Associations
    
      @ManyToOne(type => User, user => user.authorizations)
      user: User;
      
}